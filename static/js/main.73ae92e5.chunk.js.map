{"version":3,"sources":["components/Notification/Notification.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.css","components/Section/Section.module.css"],"names":["module","exports","Section","className","styles","title","this","props","children","React","Component","Statistics","good","neutral","bad","total","positivePercentage","statistics","Math","round","FeedbackOptions","options","onLeaveFeedback","map","opt","type","onClick","handleClick","name","id","Notification","message","notification","App","onClickGood","ev","setState","state","onClickNeutral","onClickBad","countTotalFeedback","buttonsOptions","countPositiveFeedbackPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73ae92e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1mTIC\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nclass Section extends React.Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n    //console.log(this);\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p className={styles.title}>{this.props.title}</p>\r\n        <div>{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <div>\r\n      <p className={styles.statistics}>\r\n        Good: <span>{good}</span>\r\n      </p>\r\n      <p className={styles.statistics}>\r\n        Neutral: <span>{neutral}</span>\r\n      </p>\r\n      <p className={styles.statistics}>\r\n        Bad: <span>{bad}</span>\r\n      </p>\r\n      <p className={styles.statistics}>\r\n        Total: <span>{total}</span>\r\n      </p>\r\n      <p className={styles.statistics}>\r\n        Positive feedback: <span>{Math.round(positivePercentage)}%</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  //console.log(options);\r\n  return (\r\n    <div>\r\n      {options.map((opt) => (\r\n        <button key={opt.id} type=\"button\" onClick={opt.handleClick}>\r\n          {opt.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      handleClick: PropTypes.func.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styles from \"./Notification.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Notification({ message }) {\r\n  return <p className={styles.notification}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\n//import PropTypes from \"prop-types\";\n//import styles from \"./Section.module.css\";\nimport Section from \"./components/Section/Section.js\";\nimport Statistics from \"./components/Statistics/Statistics.js\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions.js\";\nimport Notification from \"./components/Notification/Notification.js\";\n//import \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n    };\n    //console.log(props);\n  }\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const total = this.countTotalFeedback();\n    return total > 0 ? (100 * this.state.good) / total : 0;\n  }\n\n  onClickGood = (ev) => {\n    //console.log(\"click\");\n    this.setState({ good: this.state.good + 1 });\n  };\n  onClickNeutral = (ev) => {\n    this.setState({ neutral: this.state.neutral + 1 });\n  };\n  onClickBad = (ev) => {\n    this.setState({ bad: this.state.bad + 1 });\n  };\n\n  render() {\n    const buttonsOptions = [\n      { id: \"id-1\", name: \"Good\", handleClick: this.onClickGood },\n      { id: \"id-2\", name: \"Neutral\", handleClick: this.onClickNeutral },\n      { id: \"id-3\", name: \"Bad\", handleClick: this.onClickBad },\n    ];\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={buttonsOptions} />\n        </Section>\n        {this.countTotalFeedback() === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsTitle\":\"Statistics_statisticsTitle__2BBGO\",\"statistics\":\"Statistics_statistics__3SKXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__39Tmz\"};"],"sourceRoot":""}